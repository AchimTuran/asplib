option(BUILD_AUDIOINTERFACES      "Build Audio Interfaces"     OFF)
option(BUILD_BIQUAD               "Build biquad"               OFF)
option(BUILD_COMPUTEDEVICEINFO    "Build Compute Device Info"  OFF)
option(BUILD_FFT                  "Build FFT"                  OFF)
option(BUILD_IIR                  "Build IIR"                  OFF)
option(BUILD_LOGGER               "Build Logger"               OFF)
option(BUILD_SIGNALS              "Build Signals"              OFF)
option(BUILD_SPECTRUMVISPROCESSOR "Build SpectrumVisProcessor" OFF)
option(BUILD_TIMER                "Build Timer"                OFF)

set(AVAILABLE_MODULES AUDIOINTERFACES BIQUAD COMPUTEDEVICEINFO FFT IIR LOGGER SIGNALS SPECTRUMVISPROCESSOR TIMER)

if("${ASPLIB_MODULES_TO_BUILD}" STREQUAL "all" OR ${ASPLIB_MODULES_TO_BUILD} STREQUAL "")# OR NOT ${ASPLIB_MODULES_TO_BUILD})
  set(BUILD_AUDIOINTERFACES ON)
  set(BUILD_BIQUAD ON)
  set(BUILD_COMPUTEDEVICEINFO ON)
  set(BUILD_FFT ON)
  set(BUILD_IIR ON)
  set(BUILD_LOGGER ON)
  set(BUILD_SIGNALS ON)
  set(BUILD_SPECTRUMVISPROCESSOR ON)
  set(BUILD_TIMER ON)
else()
  message(STATUS "ASPLIB_MODULES_TO_BUILD=${ASPLIB_MODULES_TO_BUILD}")
  foreach(_mod ${ASPLIB_MODULES_TO_BUILD})
    string(TOUPPER ${_mod} _MODULE)
    message(STATUS "_MODULE=${_MODULE}")
    foreach(_avmod ${AVAILABLE_MODULES})
      if(${_avmod} MATCHES ${_MODULE})
        set(BUILD_${_MODULE} ON)
        message(STATUS "BUILD_${_MODULE}=${BUILD_${_MODULE}}")
      endif()
    endforeach()
  endforeach()
endif()


add_subdirectory(Core)
set(ASPLIB_SUPPORTED_COMPONENTS "Core" CACHE INTERNAL "supported asplib modules")

if(BUILD_AUDIOINTERFACES)
  add_subdirectory(AudioInterfaces)
  #set(ASPLIB_SUPPORTED_COMPONENTS "${ASPLIB_SUPPORTED_COMPONENTS};AudioInterfaces" CACHE INTERNAL "supported asplib modules")
endif()

if(BUILD_BIQUAD)
  add_subdirectory(Biquad)
  set(ASPLIB_SUPPORTED_COMPONENTS "${ASPLIB_SUPPORTED_COMPONENTS};Biquad" CACHE INTERNAL "supported asplib modules")
endif()

if(BUILD_COMPUTEDEVICEINFO)
  add_subdirectory(ComputeDeviceInfo)
  set(ASPLIB_SUPPORTED_COMPONENTS "${ASPLIB_SUPPORTED_COMPONENTS};ComputeDeviceInfo" CACHE INTERNAL "supported asplib modules")
endif()

if(BUILD_FFT OR BUILD_SPECTRUMVISPROCESSOR)
  add_subdirectory(FFT)
  set(ASPLIB_SUPPORTED_COMPONENTS "${ASPLIB_SUPPORTED_COMPONENTS};FFT" CACHE INTERNAL "supported asplib modules")
endif()

if(BUILD_IIR)
  add_subdirectory(IIR)
  set(ASPLIB_SUPPORTED_COMPONENTS "${ASPLIB_SUPPORTED_COMPONENTS};IIR" CACHE INTERNAL "supported asplib modules")
endif()

if(BUILD_LOGGER)
  add_subdirectory(Logger)
  set(ASPLIB_SUPPORTED_COMPONENTS "${ASPLIB_SUPPORTED_COMPONENTS};Logger" CACHE INTERNAL "supported asplib modules")
endif()

if(BUILD_SIGNALS)
  add_subdirectory(Signals)
  set(ASPLIB_SUPPORTED_COMPONENTS "${ASPLIB_SUPPORTED_COMPONENTS};Signals" CACHE INTERNAL "supported asplib modules")
endif()

if(BUILD_SPECTRUMVISPROCESSOR)
  add_subdirectory(SpectrumVisProcessor)
  set(ASPLIB_SUPPORTED_COMPONENTS "${ASPLIB_SUPPORTED_COMPONENTS};SpectrumVisProcessor" CACHE INTERNAL "supported asplib modules")
endif()

if(BUILD_TIMER)
  add_subdirectory(Timer)
  set(ASPLIB_SUPPORTED_COMPONENTS "${ASPLIB_SUPPORTED_COMPONENTS};Timer" CACHE INTERNAL "supported asplib modules")
endif()
